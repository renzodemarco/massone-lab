import PDFDocument from "pdfkit";
import streamBuffers from "stream-buffers";

export const generateCitoPDF = (data) => {
  return new Promise((resolve, reject) => {
    try {
      const doc = new PDFDocument({ size: "A4", margins: { top: 50, left: 50, right: 50, bottom: 50 } });
      const bufferStream = new streamBuffers.WritableStreamBuffer({
        initialSize: 1024 * 1024,
        incrementAmount: 1024 * 512
      });

      doc.pipe(bufferStream);

      // --- ACA TU ESTILO ---
      doc.fontSize(20).text("Reporte de Laboratorio Massone", { align: "center" });
      doc.moveDown();

      doc.fontSize(12).text(`Nro. Protocolo: ${data.protocolNumber}`);
      doc.text(`Tipo de estudio: ${data.studyType}`);
      doc.text(`Fecha de ingreso: ${data.entryDate.toLocaleDateString()}`);
      doc.moveDown();

      doc.fontSize(14).text("Paciente", { underline: true });
      doc.fontSize(12).text(`Nombre: ${data.patient.name}`);
      doc.text(`Tutor: ${data.patient.owner}`);
      doc.text(`Especie: ${data.patient.species}`);
      doc.text(`Raza: ${data.patient.breed}`);
      doc.text(`Age: ${data.patient.age}`);
      doc.text(`Sexo: ${data.patient.sex}`);
      doc.text(`Color: ${data.patient.color}`);
      doc.text(`Castrado: ${data.patient.neutered ? "Yes" : "No"}`);
      doc.moveDown();

      if (data.macroDescription) {
        doc.fontSize(14).text("Descripción Macroscópica", { underline: true });
        doc.fontSize(12).text(data.macroDescription, { align: "justify" });
        doc.moveDown();
      }

      if (data.microDescription) {
        doc.fontSize(14).text("Descripción Microscópica", { underline: true });
        doc.fontSize(12).text(data.microDescription, { align: "justify" });
        doc.moveDown();
      }

      if (data.result) {
        doc.fontSize(14).text("Diagnóstico", { underline: true });
        doc.fontSize(12).text(data.result, { align: "justify" });
        doc.moveDown();
      }

      doc.fontSize(10).fillColor("gray").text("Generated by Veterinary System", 50, 780, { align: "center", width: 500 });

      doc.end();

      bufferStream.on("finish", () => resolve(bufferStream.getContents()));
      bufferStream.on("error", reject);

    } catch (err) {
      reject(err);
    }
  });
};

